/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.35).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package org.rgomez.springboot.calculator.api.controllers.service;

import java.math.BigDecimal;

import org.rgomez.springboot.calculator.request.OperatorEnum;
import org.rgomez.springboot.calculator.response.ResultResponse;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.responses.ApiResponses;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2022-09-23T08:26:44.634Z[GMT]")
@Validated
public interface ApiRestCalculator {

	@Operation(summary = "operaciones binarias", description = "operaciones binarias de suma y resta", tags = {
			"calculator-controller" })
	@ApiResponses(value = {
			@ApiResponse(responseCode = "200", description = "OK - Resultado de la operaci贸n.", content = @Content(mediaType = "*/*", schema = @Schema(implementation = ResultResponse.class))),

			@ApiResponse(responseCode = "401", description = "Unauthorized"),

			@ApiResponse(responseCode = "403", description = "Forbidden"),

			@ApiResponse(responseCode = "404", description = "Not Found") })
	@RequestMapping(value = "/api/calculator/operations", produces = {
			MediaType.APPLICATION_JSON_VALUE }, method = RequestMethod.GET)
	ResponseEntity<ResultResponse> operation(
			@Parameter(in = ParameterIn.QUERY, description = "Primer operando de la operaci贸n", required = true, schema = @Schema()) @RequestParam(value = "number1", required = true) BigDecimal number1,
			@Parameter(in = ParameterIn.QUERY, description = "Segundo operando de la operaci贸n", required = true, schema = @Schema()) @RequestParam(value = "number2", required = true) BigDecimal number2,
			@Parameter(in = ParameterIn.QUERY, description = "Operaci贸n a realizar con los operandos", required = true, schema = @Schema()) @RequestParam(value = "operator", required = true) OperatorEnum operator);

}
